Index: kernel-rockchip/drivers/video/rockchip/mpp/dummy_v4l2_devices.h
===================================================================
--- /dev/null
+++ kernel-rockchip/drivers/video/rockchip/mpp/dummy_v4l2_devices.h
@@ -0,0 +1,13 @@
+/* SPDX-License-Identifier: (GPL-2.0+ OR MIT) */
+/*
+ * Copyright (c) 2022 FydeOS
+ *
+ * author:
+ *  yang@fydeos.io
+ *
+ */
+#ifndef __DUMMY_V4L2_DEVICES_H__
+#define __DUMMY_V4L2_DEVICES_H__
+int init_dummy_v4l2_devices(void);
+void cleanup_dummy_v4l2_devices(void);
+#endif //__DUMMY_V4L2_DEVICES_H__
Index: kernel-rockchip/drivers/video/rockchip/mpp/dummy_v4l2_devices.c
===================================================================
--- /dev/null
+++ kernel-rockchip/drivers/video/rockchip/mpp/dummy_v4l2_devices.c
@@ -0,0 +1,71 @@
+// SPDX-License-Identifier: GPL-2.0+
+// Copyright 2022 The FydeOS Authors.
+// Author: Yang Tsao<yang@fydeos.io>
+#include <linux/miscdevice.h>
+#include <linux/module.h>
+#include <linux/uaccess.h>
+#include "dummy_v4l2_devices.h"
+#define DUMMY_DEC_NAME "video-dec0"
+#define DUMMY_ENC_NAME "video-enc0"
+
+static int dummy_v4l2_release(struct inode *inode, struct file *file) {return 0;}
+
+static ssize_t dummy_v4l2_read(struct file *file, char *buf, size_t count, loff_t *ppos) {
+  struct miscdevice *dev = (struct miscdevice *) file->private_data;
+  unsigned long n;
+  if (count < 4) 
+    return -1;
+  if (strncmp(dev->name, DUMMY_DEC_NAME, 7)) {
+    n = copy_to_user(buf, "enc", 4);
+  } else {
+    n = copy_to_user(buf, "dec", 4);
+  }
+  if (n) return -1;
+  return 4;
+}
+
+static ssize_t dummy_v4l2_write(struct file *file, const char *buf, size_t count, loff_t *ppos) {
+  return count;
+}
+
+static long dymmy_v4l2_ioctl(struct file *file, unsigned int cmd, unsigned long arg) {return 0;}
+
+struct file_operations fops = {
+  .owner = THIS_MODULE,
+  .release = dummy_v4l2_release,
+  .read = dummy_v4l2_read,
+  .write = dummy_v4l2_write,
+  .compat_ioctl = dymmy_v4l2_ioctl,
+};
+
+static struct miscdevice v4l2_dec_dev = {
+  .minor = MISC_DYNAMIC_MINOR,
+  .name = DUMMY_DEC_NAME,
+  .fops = &fops,
+};
+
+static struct miscdevice v4l2_enc_dev = {
+  .minor = MISC_DYNAMIC_MINOR,
+  .name = DUMMY_ENC_NAME,
+  .fops = &fops,
+};
+
+int init_dummy_v4l2_devices(void) {
+  int ret = 0;
+  ret = misc_register(&v4l2_dec_dev);
+  if (ret) {
+    pr_err("failed to register dummy v4l2 dec device, ret:%d", ret);
+    return ret;
+  }
+  ret = misc_register(&v4l2_enc_dev);
+  if (ret) {
+    pr_err("failed to register dummy v4l2 enc device, ret:%d", ret);
+    return ret;
+  }
+  return 0;
+}
+
+void cleanup_dummy_v4l2_devices(void) {
+  misc_deregister(&v4l2_dec_dev);
+  misc_deregister(&v4l2_enc_dev);
+}
Index: kernel-rockchip/drivers/video/rockchip/mpp/Makefile
===================================================================
--- kernel-rockchip.orig/drivers/video/rockchip/mpp/Makefile
+++ kernel-rockchip/drivers/video/rockchip/mpp/Makefile
@@ -8,7 +8,7 @@ MPP_GIT_REVISION := \
 MPP_REVISION_0 := $(subst \,\\\,$(MPP_GIT_REVISION))
 MPP_REVISION   := $(subst ",\\\",$(MPP_REVISION_0))
 
-rk_vcodec-objs := mpp_service.o mpp_common.o mpp_iommu.o
+rk_vcodec-objs := mpp_service.o mpp_common.o mpp_iommu.o dummy_v4l2_devices.o
 CFLAGS_mpp_service.o += -DMPP_VERSION="\"$(MPP_REVISION)\""
 
 rk_vcodec-$(CONFIG_ROCKCHIP_MPP_RKVDEC) += mpp_rkvdec.o
Index: kernel-rockchip/drivers/video/rockchip/mpp/mpp_service.c
===================================================================
--- kernel-rockchip.orig/drivers/video/rockchip/mpp/mpp_service.c
+++ kernel-rockchip/drivers/video/rockchip/mpp/mpp_service.c
@@ -23,6 +23,7 @@
 #include "mpp_debug.h"
 #include "mpp_common.h"
 #include "mpp_iommu.h"
+#include "dummy_v4l2_devices.h"
 
 #define MPP_CLASS_NAME		"mpp_class"
 #define MPP_SERVICE_NAME	"mpp_service"
@@ -436,8 +437,8 @@ static int mpp_service_probe(struct plat
 	MPP_REGISTER_DRIVER(srv, HAS_AV1DEC, AV1DEC, av1dec);
 	MPP_REGISTER_DRIVER(srv, HAS_VDPP, VDPP, vdpp);
 
+  init_dummy_v4l2_devices();
 	dev_info(dev, "probe success\n");
-
 	return 0;
 
 fail_register:
@@ -454,6 +455,7 @@ static int mpp_service_remove(struct pla
 	int i;
 
 	dev_info(dev, "remove device\n");
+  cleanup_dummy_v4l2_devices();
 
 	for (i = 0; i < srv->taskqueue_cnt; i++) {
 		queue = srv->task_queues[i];
